---
import "@fortawesome/fontawesome-free/css/all.css";

import type { ComponentProps } from "react";
import type { SEO } from "src/types";

import Footer from "@/components/Footer";
import NavBar, { type NavBarEntry } from "@/components/NavBar";

const navBarEntries: NavBarEntry[] = [
  {
    id: "blog",
    link: "/blog",
    title: "Blog",
  },
  {
    id: "about",
    link: "/about",
    title: "About",
  },
  {
    id: "contact",
    link: "/contact",
    title: "Contact",
  },
];

type Props = {
  seo: SEO;
  activeNav?: ComponentProps<typeof NavBar>["activeNav"];
  includeNetlifyIdentity?: boolean;
};

const { seo, includeNetlifyIdentity, activeNav = "/" } = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{seo.title}</title>

    <meta name="description" content={seo.description} />
    <meta property="og:title" content={seo.openGraph.title} />
    <meta property="og:type" content={seo.openGraph.type} />
    <meta property="og:url" content={seo.openGraph.url} />
    <meta property="og:description" content={seo.openGraph.description} />
    <meta property="og:image" content={seo.openGraph.image} />
    {
      seo.openGraph.article && (
        <>
          <meta
            property="article:published_time"
            content={seo.openGraph.article.publishedTime}
          />
          <meta
            property="article:modified_time"
            content={seo.openGraph.article.modifiedTime}
          />
          {seo.openGraph.article.authors.map((author) => (
            <meta property="article:author" content={author} />
          ))}
        </>
      )
    }

    <script is:inline>
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
        localStorage.setItem("theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("theme", "light");
      }
    </script>

    <style>
      .dark {
        color-scheme: dark;
      }
    </style>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <link
      href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    {
      includeNetlifyIdentity && (
        <script src="https://identity.netlify.com/v1/netlify-identity-widget.js" />
      )
    }
  </head>

  <body class="font-mono">
    <div class="flex min-h-screen flex-col">
      <NavBar client:load entries={navBarEntries} activeNav={activeNav} />
      <div class="flex-1 dark:bg-neutral-900">
        <slot />
      </div>
      <Footer />
    </div>

    <script>
      class BottomScript extends HTMLElement {
        constructor() {
          super();

          const message = this.dataset.message;
          if (!message) return;

          const netlifyIdentity = (window as any).netlifyIdentity;
          if (netlifyIdentity) {
            netlifyIdentity.on("init", (user: any) => {
              if (!user) {
                netlifyIdentity.on("login", () => {
                  document.location.href = "/admin/";
                });
              }
            });
          }
        }
      }

      customElements.define("bottom-script", BottomScript);
    </script>
    <bottom-script data-message={includeNetlifyIdentity}></bottom-script>
  </body>
</html>
