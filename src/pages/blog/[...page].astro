---
import type { GetStaticPaths, MarkdownInstance, Page } from "astro";
import type { PostFrontmatter, SEO } from "src/types";

import Pagination from "@/components/Pagination";
import PostList from "@/components/PostList";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { defaultSeo } from "@/seo";

export const getStaticPaths = (async ({ paginate }) => {
  let allPosts = await Astro.glob<MarkdownInstance<PostFrontmatter>>(
    "../../posts/*.{md,mdx}"
  );
  allPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.publication_date).valueOf() -
      new Date(a.frontmatter.publication_date).valueOf()
  );

  return paginate(allPosts, { pageSize: 10 });
}) satisfies GetStaticPaths;

export interface Props {
  page: Page<MarkdownInstance<PostFrontmatter>>;
}

const { page } = Astro.props as Props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const seo: SEO = structuredClone(defaultSeo);
seo.title = "Blog | An Hoang";
seo.openGraph.title = seo.title;
seo.openGraph.url = canonicalURL.toString();
seo.openGraph.image = `${Astro.site?.href || "/"}images/banner.png`;
---

<BaseLayout seo={seo} activeNav="blog">
  <main>
    <PostList posts={page.data} />
    <Pagination
      totalItems={page.total}
      currentPage={page.currentPage}
      perPage={page.size}
      linkProducer={(page) => (page === 1 ? "/blog" : `/blog/${page}`)}
    />
  </main>
</BaseLayout>
