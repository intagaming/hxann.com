---
import type { GetStaticPaths, MarkdownInstance, Page } from "astro";
import type { PostFrontmatter, SEO } from "src/types";

import Pagination from "@/components/Pagination";
import PostList from "@/components/PostList";
import BaseLayout from "@/layouts/BaseLayout.astro";

export const getStaticPaths = (async ({ paginate }) => {
  let allPosts = await Astro.glob<PostFrontmatter>("../../posts/*.md");
  allPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.publication_date).valueOf() -
      new Date(a.frontmatter.publication_date).valueOf()
  );

  return paginate(allPosts, { pageSize: 10 });
}) satisfies GetStaticPaths;

export interface Props {
  page: Page<MarkdownInstance<PostFrontmatter>>;
}

const { page } = Astro.props as Props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const seo: SEO = {
  title: "Blog | An Hoang",
  description:
    "I do Software Engineering stuff. Coding, Architecting, criticize things engineers make.",
  openGraph: {
    title: "An Hoang",
    type: "website",
    description:
      "I do Software Engineering stuff. Coding, Architecting, criticize things engineers make.",
    url: canonicalURL.toString(),
    image: `${Astro.site?.href || ""}/images/banner.png`,
  },
};
---

<BaseLayout seo={seo}>
  <main>
    <PostList posts={page.data} />
    <Pagination
      totalItems={page.total}
      currentPage={page.currentPage}
      perPage={page.size}
      linkProducer={(page) => (page === 1 ? "/blog" : `/blog/${page}`)}
    />
  </main>
</BaseLayout>
